(define (my-equal?2 lst1 lst2)
  (cond ((and (null? lst1) (null? lst2)) #t)
        ((and (null? lst1) (not (null? lst2))) #f)
        ((and (null? lst2) (not (null? lst1))) #f)
        ((not (eq? (car lst1) (car lst2))) #f)
        (else (and #t (my-equal? (cdr lst1) (cdr lst2))))))


(define (my-equal? lst1 lst2)
  (cond ((and (null? lst1) (null? lst2)) #t)
        ((and (null? lst1) (not (null? lst2))) #f)
        ((and (null? lst2) (not (null? lst1))) #f)
        ((not (eq? (car lst1) (car lst2))) #f)
        (else (and #t (my-equal? (cdr lst1) (cdr lst2))))))
      